h1
Функции в JavaScript

p tag
Функциите в JavaScript са блокове код за многократна употреба, предназначени за изпълнение на специфични задачи. Те ви позволяват да организирате, използвате повторно и модулирате код. Той може да приема входни данни, да извършва действия и да връща изходни данни.

h2
Синаксис и работа на фунцкиие

p tag
Дефиницията на функция понякога се нарича още декларация на функция или оператор на функция. По-долу са правилата за създаване на функция в JavaScript:

    Започнете с функцията на ключовите думи Keyword
    Име на функция, дефинирано от потребителя (в горния пример името е sum )
    Списък с параметри, оградени в скоби и разделени със запетаи (В горния пример параметрите са x и y )
    Списък от оператори, съставящи тялото на функцията, ограден в къдрави скоби {} (В горния пример операторът е "return x + y").

h2
Извикване на функция

p tag
След дефинирането на функция, следващата стъпка е да я извикаме, за да използваме функцията. Можем да извикаме функция, като използваме името на функцията, разделено от стойността на параметрите, затворени в скобите.

code

function welcomeMsg(name) {
    return ("Hello " + name + " welcome to Programin'DE");
}

let nameVal = "User";

// calling the function
console.log(welcomeMsg(nameVal));

h2
Защо да използваме функции

p tag
Кодът на функцията, който сте написали, ще се изпълнява всеки път, когато бъде извикана.

    Задейства се от събитие (например, щракване върху бутон от потребител).
    Когато се извика изрично от JavaScript код.
    Автоматично изпълнявани, например при самоизвикващи се функции .

h2
Фунцкионален израз

p tag
Това е подобно на декларация на функция без името на функцията. Функционалните изрази могат да се съхраняват в променлива за присвояване.

Синтаксис

let testFunction= function(paramA, paramB) { 

    // Набор от оператори 
}

code

const mul = function (x, y) {
    return x * y;
};
console.log(mul(4, 5));

h2
Стрелкова функция

p tag
Стрелковите функции са кратък синтаксис за писане на функции, въведен в ES6.

Синтаксис

име_на_функция = (аргумент1, аргумент2,...) => израз

h2
Незабавно извикан функционален израз (IIFE)
IIFE функциите се изпълняват веднага след дефинирането им. Те често се използват за създаване на изолирани области.

code

function num(n, callback) {
    return callback(n);
}

const double = (n) => n * 2;

console.log(num(5, double));

h2
Анонимни Функции

p tag

Анонимните функции са функции без име. Те често се използват като аргументи на други функции.

code

setTimeout(function () {
    console.log("Anonymous function executed!");
}, 1000);


h2
Вложени функции

Функциите, дефинирани в други функции, се наричат вложени функции . Те имат достъп до променливите на родителската си функция.

code

function outerFun(a) {
    function innerFun(b) {
        return a + b;
    }
    return innerFun;
}

const addTen = outerFun(10);
console.log(addTen(5));

h2
Чисти функции

p tag
Чистите функции връщат един и същ изход за едни и същи входни данни и не произвеждат странични ефекти. Те не променят състояние извън обхвата си, като например модифициране на глобални променливи, промяна на състоянието на обекти, предадени като аргументи, или извършване на входно/изходни операции.

code
function pureAdd(a, b) {
    return a + b;
}

console.log(pureAdd(2, 3));



link - https://www.geeksforgeeks.org/javascript/functions-in-javascript/


